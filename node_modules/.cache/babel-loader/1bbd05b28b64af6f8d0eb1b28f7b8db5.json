{"ast":null,"code":"import \"antd/es/row/style\";\nimport _Row from \"antd/es/row\";\nimport \"antd/es/col/style\";\nimport _Col from \"antd/es/col\";\nimport _slicedToArray from \"/home/nilufar/Desktop/movies/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/nilufar/Desktop/movies/src/components/movies.js\";\nimport React, { useState, useEffect } from 'react';\nimport { key } from '../utils';\nimport play from '../img/play-button.png';\nexport default function Movies() {\n  const _useState = useState(null),\n        _useState2 = _slicedToArray(_useState, 2),\n        data = _useState2[0],\n        setData = _useState2[1];\n\n  const _useState3 = useState(null),\n        _useState4 = _slicedToArray(_useState3, 2),\n        movie = _useState4[0],\n        setMovie = _useState4[1];\n\n  useEffect(() => {\n    getList(key);\n  }, []);\n\n  async function getList(key) {\n    try {\n      let response = await fetch(\"https://api.themoviedb.org/3/movie/popular?api_key=\".concat(key, \"&language=en-US&page=35\"));\n      const data = await response.json();\n      setData(data);\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  function handleClick(id) {\n    alert(id);\n    getMovie(key, id);\n  }\n\n  async function getMovie(key, id) {\n    try {\n      let response = await fetch(\"https://api.themoviedb.org/3/movie/\".concat(id, \"?api_key=\").concat(key, \"&language=en-US\"));\n      const movieData = await response.json();\n      setMovie(movieData);\n      console.log(movie);\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  return React.createElement(\"div\", {\n    className: \"movie-section\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(_Row, {\n    gutter: [32, 32],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, data && data.results.map(({\n    title,\n    backdrop_path,\n    release_date,\n    id\n  }) => React.createElement(_Col, {\n    span: 6,\n    className: \"movie-cart\",\n    onClick: () => handleClick(id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"movie-img\",\n    style: {\n      background: backdrop_path === null ? \"#eee\" : \"url(\\\"https://image.tmdb.org/t/p/w342\".concat(backdrop_path, \"\\\")\")\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), React.createElement(\"img\", {\n    src: play,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    class: \"movie-caption\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"h3\", {\n    class: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, title), React.createElement(\"div\", {\n    class: \"movie-info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    class: \"movie-year\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, release_date.substr(0, 4)), React.createElement(\"span\", {\n    class: \"movie-ganre\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  })))))));\n}","map":{"version":3,"sources":["/home/nilufar/Desktop/movies/src/components/movies.js"],"names":["React","useState","useEffect","key","play","Movies","data","setData","movie","setMovie","getList","response","fetch","json","err","console","error","handleClick","id","alert","getMovie","movieData","log","results","map","title","backdrop_path","release_date","background","substr"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Row, Col } from 'antd';\nimport { key } from '../utils';\nimport play from '../img/play-button.png';\n\nexport default function Movies() {\n  const [data, setData] = useState(null)\n  const [movie, setMovie] = useState(null)\n\n  useEffect(() => {\n    getList(key);\n  }, [])\n\n  async function getList(key) {\n    try {\n      let response = await fetch(`https://api.themoviedb.org/3/movie/popular?api_key=${key}&language=en-US&page=35`);\n      const data = await response.json();\n      setData(data)\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  function handleClick(id) {\n    alert(id)\n    getMovie(key, id)\n  }\n\n\n  async function getMovie(key, id) {\n    try {\n      let response = await fetch(`https://api.themoviedb.org/3/movie/${id}?api_key=${key}&language=en-US`);\n      const movieData = await response.json();\n      setMovie(movieData)\n      console.log(movie)\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  return (\n    <div className=\"movie-section\">\n      <Row gutter={[32, 32]} >\n        {data && data.results.map(({ title, backdrop_path, release_date, id }) =>\n          <Col span={6} className=\"movie-cart\" onClick={() => handleClick(id)}>\n            <div className=\"movie-img\" style={{ background: backdrop_path === null ? \"#eee\" : `url(\"https://image.tmdb.org/t/p/w342${backdrop_path}\")` }} ></div>\n            <img src={play} />\n            <div class=\"movie-caption\">\n              <h3 class=\"title\">{title}</h3>\n              <div class=\"movie-info\">\n                <span class=\"movie-year\">{release_date.substr(0, 4)}</span>\n                <span class=\"movie-ganre\"></span>\n              </div>\n            </div>\n          </Col>\n        )}\n      </Row>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}